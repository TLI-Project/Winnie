
        export function Graph2Models(props){
        //get the line chart canvas
        var ctx1 = $("#line-chartcanvas");
        var yValuesNM1 = [];
        for (let i = 0; i < props.newModel1["depreciation"].length; i++){
        yValuesNM1.push(props.newModel1["depreciation"][i]* props.newModel1["listPrice"]);
        console.log(props.newModel1["depreciation"][i]* props.newModel1["listPrice"]);
    }

        var yValuesNM2 = [];
        for (let i = 0; i < props.newModel2["depreciation"].length; i++){
        yValuesNM2.push(props.newModel2["depreciation"][i]* props.newModel2["listPrice"]);
        console.log(props.newModel2["depreciation"][i]* props.newModel2["listPrice"]);
    }

        var yValuesUM1 = [];
        for (let i = 0; i < props.usedModel1["depreciation"].length; i++){
        yValuesUM1.push(props.usedModel1["depreciation"][i]* props.usedModel1["listPrice"]);
        console.log(props.usedModel1["depreciation"][i]* props.usedModel1["listPrice"]);
    }

        var yValuesUM2 = [];
        for (let i = 0; i < props.usedModel2["depreciation"].length; i++){
        yValuesUM2.push(props.usedModel2["depreciation"][i]* props.usedModel2["listPrice"]);
        console.log(props.usedModel2["depreciation"][i]* props.usedModel2["listPrice"]);
    }
        //line chart data
        var data = {
        labels: ["Year 1", "Year 2", "Year 3", "Year 4", "Year 5", "Year 6", "Year 7", "Year 8", "Year 9", "Year 10"],
        datasets: [
    {
        label: props.newModel1["model"]+ " New",
        data: yValuesNM1,
        backgroundColor: "blue",
        borderColor: "lightblue",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.newModel2["model"]+ " New",
        data: yValuesNM2,
        backgroundColor: "gray",
        borderColor: "lightgray",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel1["model"]+ " Used",
        data: yValuesUM1,
        backgroundColor: "pink",
        borderColor: "lightpink",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel2["model"]+ " Used",
        data: yValuesUM2,
        backgroundColor: "green",
        borderColor: "lightgreen",
        fill: false,
        lineTension: 0,
        radius: 5
    }
        ]
    };

        //options
        var options = {
        responsive: true,
        title: {
        display: true,
        position: "top",
        text: "Vehicle Depreciation Projection",
        fontSize: 18,
        fontColor: "#111"
    },
        legend: {
        display: true,
        position: "bottom",
        labels: {
        fontColor: "#333",
        fontSize: 16
    }
    }
    }
        return <Line options={options} data={data}  type={"line"}/>;
    }

        export function Graph3Models(props) {

        //get the line chart canvas
        var ctx2 = $("#line-chartcanvas");
        var yValuesNM1 = [];
        for (let i = 0; i < props.newModel1["depreciation"].length; i++){
        yValuesNM1.push(props.newModel1["depreciation"][i]* props.newModel1["listPrice"]);
        console.log(props.newModel1["depreciation"][i]* props.newModel1["listPrice"]);
    }

        var yValuesNM2 = [];
        for (let i = 0; i < props.newModel2["depreciation"].length; i++){
        yValuesNM2.push(props.newModel2["depreciation"][i]* props.newModel2["listPrice"]);
        console.log(props.newModel2["depreciation"][i]* props.newModel2["listPrice"]);
    }

        var yValuesNM3 = [];
        for (let i = 0; i < props.newModel3["depreciation"].length; i++){
        yValuesNM3.push(props.newModel3["depreciation"][i]* props.newModel3["listPrice"]);
        console.log(props.newModel3["depreciation"][i]* props.newModel3["listPrice"]);
    }

        var yValuesUM1 = [];
        for (let i = 0; i < props.usedModel1["depreciation"].length; i++){
        yValuesUM1.push(props.usedModel1["depreciation"][i]* props.usedModel1["listPrice"]);
        console.log(props.usedModel1["depreciation"][i]* props.usedModel1["listPrice"]);
    }

        var yValuesUM2 = [];
        for (let i = 0; i < props.usedModel2["depreciation"].length; i++){
        yValuesUM2.push(props.usedModel2["depreciation"][i]* props.usedModel2["listPrice"]);
        console.log(props.usedModel2["depreciation"][i]* props.usedModel2["listPrice"]);
    }

        var yValuesUM3 = [];
        for (let i = 0; i < props.usedModel3["depreciation"].length; i++){
        yValuesUM3.push(props.usedModel3["depreciation"][i]* props.usedModel3["listPrice"]);
        console.log(props.usedModel3["depreciation"][i]* props.usedModel3["listPrice"]);
    }

        //line chart data
        var data = {
        labels: ["Year 1", "Year 2", "Year 3", "Year 4", "Year 5", "Year 6", "Year 7", "Year 8", "Year 9", "Year 10"],
        datasets: [
    {
        label: props.newModel1["model"]+ " New",
        data: yValuesNM1,
        backgroundColor: "blue",
        borderColor: "lightblue",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.newModel2["model"]+ " New",
        data: yValuesNM2,
        backgroundColor: "gray",
        borderColor: "lightgray",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.newModel3["model"]+ " New",
        data: yValuesNM3,
        backgroundColor: "gray",
        borderColor: "darkgray",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel1["model"]+ " Used",
        data: yValuesUM1,
        backgroundColor: "pink",
        borderColor: "lightpink",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel2["model"]+ " Used",
        data: yValuesUM2,
        backgroundColor: "green",
        borderColor: "lightgreen",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel3["model"]+ " Used",
        data: yValuesUM3,
        backgroundColor: "black",
        borderColor: "darkgray",
        fill: false,
        lineTension: 0,
        radius: 5
    }
        ]
    };

        //options
        var options = {
        responsive: true,
        title: {
        display: true,
        position: "top",
        text: "Vehicle Depreciation Projection",
        fontSize: 18,
        fontColor: "#111"
    },
        legend: {
        display: true,
        position: "bottom",
        labels: {
        fontColor: "#333",
        fontSize: 16
    }
    }
    }
        return <Line options={options} data={data}  type={"line"}/>;
    }

        export function Graph4Models(props) {
        //get the line chart canvas
        var ctx2 = $("#line-chartcanvas");
        var yValuesNM1 = [];
        for (let i = 0; i < props.newModel1["depreciation"].length; i++){
        yValuesNM1.push(props.newModel1["depreciation"][i]* props.newModel1["listPrice"]);
        console.log(props.newModel1["depreciation"][i]* props.newModel1["listPrice"]);
    }

        var yValuesNM2 = [];
        for (let i = 0; i < props.newModel2["depreciation"].length; i++){
        yValuesNM2.push(props.newModel2["depreciation"][i]* props.newModel2["listPrice"]);
        console.log(props.newModel2["depreciation"][i]* props.newModel2["listPrice"]);
    }

        var yValuesNM3 = [];
        for (let i = 0; i < props.newModel3["depreciation"].length; i++){
        yValuesNM3.push(props.newModel3["depreciation"][i]* props.newModel3["listPrice"]);
        console.log(props.newModel3["depreciation"][i]* props.newModel3["listPrice"]);
    }

        var yValuesNM4 = [];
        for (let i = 0; i < props.newModel4["depreciation"].length; i++){
        yValuesNM4.push(props.newModel4["depreciation"][i]* props.newModel4["listPrice"]);
        console.log(props.newModel4["depreciation"][i]* props.newModel4["listPrice"]);
    }

        var yValuesUM1 = [];
        for (let i = 0; i < props.usedModel1["depreciation"].length; i++){
        yValuesUM1.push(props.usedModel1["depreciation"][i]* props.usedModel1["listPrice"]);
        console.log(props.usedModel1["depreciation"][i]* props.usedModel1["listPrice"]);
    }

        var yValuesUM2 = [];
        for (let i = 0; i < usedModel2["depreciation"].length; i++){
        yValuesUM2.push(usedModel2["depreciation"][i]* usedModel2["listPrice"]);
        console.log(usedModel2["depreciation"][i]* usedModel2["listPrice"]);
    }

        var yValuesUM3 = [];
        for (let i = 0; i < props.usedModel3["depreciation"].length; i++){
        yValuesUM3.push(props.usedModel3["depreciation"][i]* props.usedModel3["listPrice"]);
        console.log(props.usedModel3["depreciation"][i]* props.usedModel3["listPrice"]);
    }

        var yValuesUM4 = [];
        for (let i = 0; i < props.usedModel4["depreciation"].length; i++){
        yValuesUM4.push(props.usedModel4["depreciation"][i]* props.usedModel4["listPrice"]);
        console.log(props.usedModel4["depreciation"][i]* props.usedModel4["listPrice"]);
    }

        //line chart data
        var data = {
        labels: ["Year 1", "Year 2", "Year 3", "Year 4", "Year 5", "Year 6", "Year 7", "Year 8", "Year 9", "Year 10"],
        datasets: [
    {
        label: props.newModel1["model"]+ " New",
        data: yValuesNM1,
        backgroundColor: "blue",
        borderColor: "lightblue",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.newModel2["model"]+ " New",
        data: yValuesNM2,
        backgroundColor: "gray",
        borderColor: "lightgray",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.newModel3["model"]+ " New",
        data: yValuesNM3,
        backgroundColor: "gray",
        borderColor: "darkgray",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.newModel4["model"]+ " New",
        data: yValuesNM4,
        backgroundColor: "green",
        borderColor: "darkgreen",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel1["model"]+ " Used",
        data: yValuesUM1,
        backgroundColor: "pink",
        borderColor: "lightpink",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel2["model"]+ " Used",
        data: yValuesUM2,
        backgroundColor: "green",
        borderColor: "lightgreen",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel3["model"]+ " Used",
        data: yValuesUM3,
        backgroundColor: "black",
        borderColor: "darkgray",
        fill: false,
        lineTension: 0,
        radius: 5
    },
    {
        label: props.usedModel4["model"]+ " Used",
        data: yValuesUM4,
        backgroundColor: "blue",
        borderColor: "darkblue",
        fill: false,
        lineTension: 0,
        radius: 5
    }
        ]
    };

        //options
        var options = {
        responsive: true,
        title: {
        display: true,
        position: "top",
        text: "Vehicle Depreciation Projection",
        fontSize: 18,
        fontColor: "#111"
    },
        legend: {
        display: true,
        position: "bottom",
        labels: {
        fontColor: "#333",
        fontSize: 16
    }
    }
    };

        //create Chart class object
        return <Line options={options} data={data}  type={"line"}/>;
    }